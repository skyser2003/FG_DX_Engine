CMAKE_MINIMUM_REQUIRED (VERSION 2.6)
PROJECT (DxCanvas)

LIST( APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMake" )
INCLUDE( pch_support )

IF(CMAKE_EXE_LINKER_FLAGS EQUAL " /machine:x64 ")
	SET (ARCH "64")
ELSE()
	SET (ARCH "86")
ENDIF()

SET (CMAKE_C++_CREATE_STATIC_LIBRARY 1)
SET (DXCANVAS_SOURCE_DIR "${PROJECT_SOURCE_DIR}/source")
SET (DXCANVAS_PCH_SUBDIR ${DXCANVAS_SOURCE_DIR}/PCH)
SET (DXCANVAS_PCH_NAME "dxstdafx")
SET (DXCANVAS_PCH_HEADER ${DXCANVAS_PCH_NAME}.h)
SET (DXCANVAS_PCH_CPP ${DXCANVAS_PCH_NAME}.cpp)
SET (DXCANVAS_PCH_BIN ${DXCANVAS_PCH_NAME}.pch)

SET(DXCANVAS_SOURCE_SUBDIRS
"Camera"
"Canvas"
"DirectX"
"Graphics"
"Light"
"Model"
"PCH"
"Shaders"
"Text"
"Texture"
"TextureManager"
)

SET(DXCANVAS_SOURCE_FILES "")
FOREACH(subdir ${DXCANVAS_SOURCE_SUBDIRS})
	FILE(GLOB TEMP ${DXCANVAS_SOURCE_DIR}/${subdir}/*.cpp ${DXCANVAS_SOURCE_DIR}/${subdir}/*.h)
	SET(DXCANVAS_SOURCE_FILES ${DXCANVAS_SOURCE_FILES} ${TEMP})
ENDFOREACH()

ADD_LIBRARY (DxCanvas
${DXCANVAS_SOURCE_FILES}
)
FOREACH(subdir ${DXCANVAS_SOURCE_SUBDIRS})
    SOURCE_GROUP(${subdir} FILES ${DXCANVAS_SOURCE_DIR}/${subdir}/*.cpp ${DXCANVAS_SOURCE_DIR}/${subdir}/*.h)
	MESSAGE(${DXCANVAS_SOURCE_DIR}/${subdir}/)
ENDFOREACH()

INCLUDE_DIRECTORIES( ${DXCANVAS_SOURCE_DIR} )
INCLUDE_DIRECTORIES( ${DXCANVAS_PCH_SUBDIR} )
INCLUDE_DIRECTORIES( "$ENV{DXSDK_DIR}Include" )

LINK_DIRECTORIES( $ENV{DXSDK_DIR}x${ARCH} )
TARGET_LINK_LIBRARIES(DxCanvas
"d3dx10.lib"
"d3dx11.lib"
"d3d11.lib"
"dsound.lib"
"dxguid.lib"
"dxgi.lib"
"winmm.lib"
)

MSVC_SET_PCH(DxCanvas
${DXCANVAS_PCH_SUBDIR}/${DXCANVAS_PCH_HEADER}
${DXCANVAS_PCH_SUBDIR}/${DXCANVAS_PCH_CPP}
)	
#SET_TARGET_PROPERTIES(DXCANVAS PROPERTIES LINKER_LANGUAGE C++)